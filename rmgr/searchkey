#!/bin/sh

# Search for matching keys

PrintUsage() {
  cat << EOF
Usage: $(basename $0) [options] <search key>

Search the database for the search key (can be a regex). The key can be piped
in or provided as an argument (which takes precedence).

Exit codes:
- 0: success
- 1: search key not provided
- 2: no matching keys found
- 3: multiple matching keys found

Options:
  -p: The given key is a prefix (so allow for any characters after it
EOF
}

##### MAIN #####

[ "$1" = "-p" ] && PREFIX_MODE="yes" && shift

key="$1"
if [ -z "$key" ]; then
  [ ! -t 0 ] && key=$(</dev/stdin)
  [ -z "$key" ] && PrintUsage && exit 1
fi

[ "$PREFIX_MODE" = "yes" ] && key="$key.*"

# Search for the keys in the (YAML) DB and extract just the key names
matchedKeys=$(sed -En "/^- $key:/ s/- (.*):/\1/ p" "$DB")

[ -z "$matchedKeys" ] && exit 2
echo "$matchedKeys"
[ $(echo "$matchedKeys" | wc -l) -gt 1 ] && exit 3 || exit 0
