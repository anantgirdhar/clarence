#!/bin/sh

# Generate a key according to the settings

PrintUsage() {
    cat << EOF
Usage: $(basename $0) [options] <BibJSON>

Generate a key for the entry according to the data in the entry and the
settings. The BibJSON entry can be piped in but command line arguments take
precedence.

Options:
  -u: create new unique key
      To avoid clashes, the key is appended with an extra character to make it
      unique, if required.
  -y: input is in YAML format (instead of BibJSON)
EOF
}

GetFirstAuthorLastName() {
  INPUT_FORMAT="$1"
  record="$2"
  if [ "$INPUT_FORMAT" = "bibjson" ]; then
    echo "$record" | jq -r '.author[0].family' | sed 's/-//g'  # Remove hyphens from the last name
  elif [ "$INPUT_FORMAT" = "yaml" ]; then
    echo "$record" | getyamlval "firstauthor" "$record" | rev | cut -f 1 -d ' ' | rev | sed 's/-//g'  # Remove hyphens from the last name
  fi
}

GetFirstAuthorFirstInitial() {
  INPUT_FORMAT="$1"
  record="$2"
  if [ "$INPUT_FORMAT" = "bibjson" ]; then
    echo "$record" | jq -r '.author[0].given' | cut -b 1
  elif [ "$INPUT_FORMAT" = "yaml" ]; then
    echo "$record" | getyamlval "firstauthor" "$record" | cut -b 1
  fi
}

GetYear() {
  INPUT_FORMAT="$1"
  record="$2"
  if [ "$INPUT_FORMAT" = "bibjson" ]; then
    echo "$record" | getbjval year
  elif [ "$INPUT_FORMAT" = "yaml" ]; then
    echo "$record" | getyamlval "year"
  fi
}

MakeUnique() {
  key="$1"
  matchedKeys=$(searchkey -p "$key" | sort | uniq)
  [ -z "$matchedKeys" ] && echo "$key" && exit 0
  lastKey=$(echo "$matchedKeys" | tail -n 1)
  suffix=$(echo "$lastKey" | sed "s/$key//")
  if [ -z "$suffix" ]; then
    suffix="b"
  else
    suffix=$(echo "$suffix" | tr '[a-y]' '[b-z]')
  fi
  echo "$key$suffix" && exit 0
}

##### MAIN #####

# Set some defaults for the options
CREATE_UNIQUE="no"
INPUT_FORMAT="bibjson"

# Parse the options
while true; do
  case "$1" in
    '-u') CREATE_UNIQUE="yes" && shift ;;
    '-y') INPUT_FORMAT="yaml" && shift ;;
    *) break ;;
  esac
done

bibjson="$1"
if [ -z "$bibjson" ]; then
    [ ! -t 0 ] && bibjson=$(cat /dev/stdin)
    [ -z "$bibjson" ] && PrintUsage && exit 1
fi

# Set the key to fL-Y
# - f: first initial of first author
# - L: full last name of first author
# - Y: 4-digit year

f=$(GetFirstAuthorFirstInitial "$INPUT_FORMAT" "$bibjson")
L=$(GetFirstAuthorLastName "$INPUT_FORMAT" "$bibjson")
Y=$(GetYear "$INPUT_FORMAT" "$bibjson")
key=$(echo "$f$L-$Y" |\
  sed 's/ //g' |\
  tr '[:upper:]' '[:lower:]' |\
  iconv -f utf8 -t ascii//TRANSLIT)
if [ "$CREATE_UNIQUE" = "yes" ]; then
  MakeUnique "$key"
else
  echo "$key"
fi
