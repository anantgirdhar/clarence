#!/bin/sh

# Update the database record given a new one

PrintUsage() {
  cat << EOF
Usage: $(basename $0) <key> <newRecord>

Update the database record given a new one.

The new record can be piped in or provided as an argument (takes precedence).
EOF
}

##### MAIN #####

key="$1"
[ -z "$key" ] && PrintUsage && exit 1
newRecord="$2"
if [ -z "$newRecord" ]; then
  [ ! -t 0 ] && newRecord=$(cat /dev/stdin)
  [ -z "$newRecord" ] && PrintUsage && exit 1
fi

# Get the old metadata
oldRecord=$(key2record "$key")

# If they are the same, do nothing
[ "$oldRecord" == "$newRecord" ] && exit 0

# Otherwise, just update the record
awk -v new="$newRecord\n" "BEGIN { printed=0 } /^- .+/ { inrecord=0 } /^- $key:/ { inrecord=1 } {if (inrecord==1 && printed==0) { print new; printed=1 } else if (inrecord==0) { print } }" "$DB" > "$DB".new
mv "$DB" "$DB.$(date +%y%m%d%H%M%S)"
mv "$DB".new "$DB"
