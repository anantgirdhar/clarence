#!/bin/sh

# Look up search terms on crossref.org to find bibliographic information
# When the search results have been retrieved, present the user with the
# option of selecting the record with the correct details. Then return
# the doi.

# This script redirects all user output to stderr so that the doi can be
# returned over stdin (and possibly piped into another script).

PrintUsage() {
    cat 1>&2 << EOF
Usage: $(basename $0) <search terms>

Query api.crossref.org with the search terms to get the DOI number.
EOF
}

GetDetails() {
    response="$1"
    idx="$2"
    echo "$response" | jq ".message.items[$idx] |
        {
            title: .title[],
            author: [.author[]? | .given? + \" \" + .family?],
            year: .[\"published-print\"][\"date-parts\"][0],
        }"
}

GetDOI() {
    response="$1"
    idx="$2"
    echo "$response" | jq -r ".message.items[$idx][\"DOI\"]"
}

##### MAIN #####

searchTerms="$@"
[ -z "$searchTerms" ] && PrintUsage && exit 1
searchTerms=$(echo "$searchTerms" | sed 's/ /%20/g')

CROSSREF_URL="https://api.crossref.org/works?query.bibliographic=$searchTerms&sort=score&order=desc"
response=$(curl --silent "$CROSSREF_URL")

count=$(echo "$response" | jq -r '.message.items[] | .title? | .[]' | wc -l)
while true; do
    # Give the user a menu to select from
    # Redirect the menu to stderr so that it doesn't show up in the final output
    echo "$response" | jq -r '.message.items[] | .title? | .[]' | nl -v 0 - 1>&2
    read -p 'Choose the closest title match: ' choice
    if [ -z "$choice" ]; then
        searchTerms=""
        while [ -z "$searchTerms" ]; do
            read -p 'Enter new search terms: ' searchTerms >&2
        done
        searchTerms=$(echo "$searchTerms" | sed 's/ /%20/g')
        CROSSREF_URL="https://api.crossref.org/works?query.bibliographic=$searchTerms&sort=score&order=desc"
        response=$(curl --silent "$CROSSREF_URL")
        count=$(echo "$response" | jq -r '.message.items[] | .title? | .[]' | wc -l)
    elif [ $choice -eq $choice ] && [ $choice -ge 0 ] && [ $choice -lt $count ]; then
        # Verify author and year
        # Redirect the menu to stderr so that it doesn't show up in the final output
        GetDetails "$response" $choice 1>&2
        read -p 'Does this information look correct? [y|N]: ' confirmation
        [ $(echo $confirmation | tr '[:upper:]' '[:lower:]') = 'y' ] && break
    fi
done

# Finally get the doi (and leave it on stdin)
GetDOI "$response" $choice
