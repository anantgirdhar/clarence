#!/bin/sh

# Look up search terms on crossref.org to find bibliographic information
# When the search results have been retrieved, present the user with the
# option of selecting the record with the correct details. Then return
# the doi.

PrintUsage() {
  cat << EOF
Usage: $(basename $0) <search terms>

Query api.crossref.org with the search terms to get the DOI number.

If the output of this script is piped to another script or saved in a variable,
only the final DOI number is sent.
EOF
}

GetDetails() {
  response="$1"
  idx="$2"
  echo "$response" | jq ".message.items[$idx] |
    {
      title: .title[],
      author: [.author[]? | .given? + \" \" + .family?],
      year: .[\"published-print\"][\"date-parts\"][0],
    }"
}

GetDOI() {
  response="$1"
  idx="$2"
  echo "$response" | jq -r ".message.items[$idx][\"DOI\"]"
}

##### MAIN #####

# In case the script's output needs to be saved in a varible or piped to
# another script, stdout will not print to /dev/tty. Save whatever /dev/stdout
# is set to, redirect stdout to /dev/tty, and reset it before outputting the
# final DOI.
exec 9<>/dev/stdout
exec 1<>/dev/tty

searchTerms="$@"
if [ -z "$searchTerms" ]; then
  [ ! -t 0 ] && searchTerms=$(</dev/stdin)
  [ -z "$searchTerms" ] && PrintUsage && exit 1
fi

# Reattach tty to stdin (in case data was piped in)
exec 0</dev/tty

queryCrossref="yes"
while true; do
  while [ -z "$searchTerms" ]; do
    read -p 'Enter new search terms: ' searchTerms
    queryCrossref="yes"
  done
  if [ $queryCrossref = "yes" ]; then
    # Encode $searchTerms for URL transmission (encode spaces)
    searchTerms=$(echo "$searchTerms" | sed 's/ /%20/g')
    CROSSREF_URL="https://api.crossref.org/works?query.bibliographic=$searchTerms&sort=score&order=desc"
    response=$(curl --silent "$CROSSREF_URL")
    count=$(echo "$response" | jq -r '.message.items[] | .title? | .[]' | wc -l)
    queryCrossref="no"
    # echo "response: $response"
    # echo "count: $count"
  fi
  # Display the results and ask for a response
  highlightWords=$(sed 's/%20/|/g' <<< "$searchTerms")
  # echo "highlight: $highlightWords"
  echo "$response" | jq -r '.message.items[] | .title? | .[]' | nl -v 0 - | grep -i --color -E "^|$highlightWords"
  read -p 'Choose the closest title match [r|q|#]: ' choice
  if [ $choice = 'r' ]; then
    searchTerms=""
    continue
  elif [ $choice = 'q' ]; then
    exit 10
  elif [ $choice -eq $choice ] && [ $choice -ge 0 ] & [ $choice -lt $count ]; then
    # Verify author and year
    GetDetails "$response" $choice
    read -p 'Does this information look correct? [y|N]: ' confirmation
    [ $confirmation = 'y' ] && break
  fi
done

# Finally get the doi (and leave it on stdout)
exec 1<&9
GetDOI "$response" $choice
