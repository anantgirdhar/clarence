#!/bin/sh

# Get a specific dict value for a key

PrintUsage() {
    cat << EOF
Usage: $(basename $0) [<options>] <bibkey> <datakey>

Get a specific datakey value for a specific bibkey.

Options:
-d str : default value for string (if the bibkey doesn't have a value)
-n str : change all newlines to str
EOF
}

GetSingleVal() {
    datakey="$1"
    record="$2"
    sed -E "s/^  - $datakey:\s*//" <<< "$record"
}

GetListVal() {
    datakey="$1"
    record="$2"
    echo "$record" | tail -n +2 | sed "s/\s*//"
}

##### MAIN #####

source rmgr_setupenv

default=""
newlines=""
while true; do
    case "$1" in
        "-d") default="$2" && shift && shift ;;
        "-n") newlines="$2" && shift && shift ;;
        *) break ;;
    esac
done

key="$1"
[ -z "$key" ] && PrintUsage && exit 1
datakey="$2"
[ -z "$datakey" ] && PrintUsage && exit 1

# Verify that the record exists
searchResults=$(rmgr_lookupkey "$key")
case $? in
    0) ;;
    1) echo "Key $key not found." && exit 1 ;;
    2)
        echo "Multiple keys found matching $key:"
        rmgr_key2bib "$key"
        exit 2
        ;;
    *) echo "Unknown exit code recieved from rmgr_lookupkey." && exit 70
esac

#TODO: Check if the key exists in $BIB
# Check if the key exists in $EXT
searchResults=$(sed -n "/^- $key:/,/^- / p" "$EXT" |\
    sed -En "/^  - $datakey:/,/(^\s{0,2}- |^$)/ p" |\
    sed -E '/^$/ d')

case $(echo "$searchResults" | wc -l) in
    0) echo "Datakey $datakey not found." && exit 3 ;;
    1) val=$(GetSingleVal "$datakey" "$searchResults") ;;
    *) val=$(GetListVal "$datakey" "$searchResults") ;;
esac

[ -z "$val" ] && echo "$default" && exit 0
[ ! -z "$newlines" ] && val=$(echo "$val" | tr '\n' '#' | rev | cut -c 2- | rev | sed "s/#/$newlines/g")
echo "$val"
